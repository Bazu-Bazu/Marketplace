version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: redis_db
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  postgres:
    image: postgres:17.4
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    command: postgres -c client_encoding=UTF-8

  mongodb:
    image: mongo:latest
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network


#  spring_app:
#    build: .
#    depends_on:
#      postgres:
#        condition: service_healthy
#      redis:
#        condition: service_started
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/postgres
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres—á
#      SPRING_REDIS_HOST: redis
#      SPRING_REDIS_PORT: 6379
#      SPRING_PROFILES_ACTIVE: docker
#    ports:
#      - "8080:8080"
#    networks:
#      - app_network

volumes:
  redis_data:
  postgres_data:
  mongodb_data:

networks:
  app_network:
    driver: bridge